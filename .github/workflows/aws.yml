name: AWS
on:
  push:
    branches:
      - main

jobs:
  AWS:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: <use your role>
          role-session-name: aws
          role-duration-seconds: 2700
          aws-region: us-east-1
      - name: Create ECR
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ECR
          template: CFT/ecr.yml
          no-fail-on-empty-changeset: "1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nodejs-app
          IMAGE_TAG: 1.0
        run: |
          cd app
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Create ECS and Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ECS
          template: CFT/ecs.yml
          no-fail-on-empty-changeset: "1"
